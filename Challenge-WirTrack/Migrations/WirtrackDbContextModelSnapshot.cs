// <auto-generated />
using System;
using Challenge_WirTrack.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Challenge_WirTrack.Migrations
{
    [DbContext(typeof(WirtrackDbContext))]
    partial class WirtrackDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Challenge_WirTrack.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 141, DateTimeKind.Local).AddTicks(6378),
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 142, DateTimeKind.Local).AddTicks(4603),
                            Name = "Mar del Plata"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 142, DateTimeKind.Local).AddTicks(4615),
                            Name = "La Plata"
                        });
                });

            modelBuilder.Entity("Challenge_WirTrack.Entities.Travel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityID");

                    b.HasIndex("VehicleID");

                    b.ToTable("Travels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityID = 1,
                            Date = new DateTime(2022, 7, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 144, DateTimeKind.Local).AddTicks(2004),
                            VehicleID = 1
                        },
                        new
                        {
                            Id = 2,
                            CityID = 2,
                            Date = new DateTime(2022, 7, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 144, DateTimeKind.Local).AddTicks(3076),
                            VehicleID = 1
                        },
                        new
                        {
                            Id = 3,
                            CityID = 3,
                            Date = new DateTime(2022, 7, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 144, DateTimeKind.Local).AddTicks(3156),
                            VehicleID = 1
                        },
                        new
                        {
                            Id = 4,
                            CityID = 1,
                            Date = new DateTime(2022, 7, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 144, DateTimeKind.Local).AddTicks(3162),
                            VehicleID = 2
                        },
                        new
                        {
                            Id = 5,
                            CityID = 2,
                            Date = new DateTime(2022, 7, 15, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 144, DateTimeKind.Local).AddTicks(3166),
                            VehicleID = 2
                        },
                        new
                        {
                            Id = 6,
                            CityID = 3,
                            Date = new DateTime(2022, 7, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 144, DateTimeKind.Local).AddTicks(3169),
                            VehicleID = 2
                        });
                });

            modelBuilder.Entity("Challenge_WirTrack.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Patent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Toyota",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 143, DateTimeKind.Local).AddTicks(7006),
                            Patent = "AAA000",
                            Type = "Car"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Honda",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 143, DateTimeKind.Local).AddTicks(7973),
                            Patent = "AAA001",
                            Type = "Truck"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Scannia",
                            IsDeleted = false,
                            LastModified = new DateTime(2022, 7, 14, 10, 50, 43, 143, DateTimeKind.Local).AddTicks(7978),
                            Patent = "AAA003",
                            Type = "Truck"
                        });
                });

            modelBuilder.Entity("Challenge_WirTrack.Entities.Travel", b =>
                {
                    b.HasOne("Challenge_WirTrack.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Challenge_WirTrack.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
